Olimex STM32 P103 Development Kit Demos

OVERVIEW
This folder contains an example of a shared queue which can be used by various 
tasks to write messages to the RS232 port simultaneously.

This program runs the following tasks concurrently:
  1) Blink the LED.
  2) Print the string "Hello 1" to the RS232 port (twice a second).
  3) Print the string "Hello 2" to the RS232 port (once every two seconds).
  4) Listens to the RS232 port.  When you type a line and then hit
     the enter key, the line is echoed back.

A makefile is included which can compile the program and run in QEMU.



DEPENDENCIES
The makefile and linker scripts are intended to be run in a GNU/Linux environment.  

To compile, you need the ARM GCC compiler and utilities (arm-none-eabi-gcc,
arm-none-eabi-ld, arm-none-eabi-as, arm-none-eabi-objcopy,
arm-none-eabi-objdump).  These should be in your path.  I chose
to compile using the CodeSourcery G++ Lite toolchain for ARM.  At the time of
writing, I used:
Sourcery CodeBench Lite 2012.03-56 for ARM EABI

To run the QEMU examples, you need a modifed version of QEMU which contains the
STM32 peripherals.  This can be found at: https://github.com/beckus/qemu_stm32 .
The QEMU_ARM_DIR can be set to the location of the qemu_system_arm executable.
If the variable is not set, it defaults to ../qemu_stm32/arm-softmmu/ .

For the UART examples, I used putty as my terminal software.
Connect with these settings:
9600 Baud Rate
8 Data bits
1 Stop bit

Note that the peripheral library knows the clock rate of the board via the
HSE_VALUE and HSI_VALUE macros in
libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x.h .



FOLDER STRUCTURE
src
    Contains the demo source code.
libraries
    Contains shared libraries from external sources
libraries/CMSIS
    Contains CMSIS source code (a common API for ARM Cortex cores that is vendor
    independent) - copied from STMicro's STM32F10x_StdPeriph_Lib.zip V3.5.0.
    Note that the file CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h has been 
    odified to uncomment the "#define STM32F10X_MD" and
    "#define USE_STDPERIPH_DRIVER" lines.
libraries/FreeRTOS
    Contains the FreeRTOS real time operating system source code - this is a
    copy of the Source folder from FreeRTOSV7.1.1.zip
libraries/STM32F10x_StdPeriph_Driver
    Contains STM32 peripheral libraries - copied from
    STMicro's STM32F10x_StdPeriph_Lib.zip V3.5.0



USING THE MAKEFILE
The makefile contains targets that can be used to compile, run, and debug the
demo programs.

Compiling and running in QEMU:
To compile the program, run "make "
This will produce three files in the src folder:
    main.bin -  The raw binary file.  Can be used to program the microcontroller
                or to run in QEMU.
    main.elf -  The program with debug symbols included.  Can be loaded into
                a debugger.
    main.list - A listing containing the entire program.  Can be examined to
                get disassembly, symbols, exact memory addresses, etc..